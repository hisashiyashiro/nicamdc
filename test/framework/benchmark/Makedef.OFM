#
# ------ FOR Linux 64bit & intel fortran&C & intel mpi -----
#
FFLAGS_FAST  = -fpp -m64 -O3 -axMIC-AVX512 -qopenmp  \
               -assume byterecl -convert big_endian  \
               -fp-model source                      \
               -align array64byte                    \
               -qopt-streaming-stores always         \
               -mcmodel=medium

FFLAGS_DEBUG = -fpp -m64 -O0 -axMIC-AVX512 -qopenmp  \
               -assume byterecl -convert big_endian  \
               -fpe0 -fp-model source                \
               -align array64byte                    \
               -qopt-streaming-stores always         \
               -check bounds -warn all -g -traceback \
               -mcmodel=medium

FC     = mpiifort
FFLAGS = $(FFLAGS_FAST)
#FFLAGS = $(FFLAGS_DEBUG)

CFLAGS_FAST  = -O3 -axMIC-AVX512 -mcmodel=medium
CFLAGS_DEBUG = -O0 -axMIC-AVX512 -mcmodel=medium

CC     = mpiicc
CFLAGS = $(CFLAGS_FAST)
#CFLAGS = $(CFLAGS_DEBUG)

##### Special Options #####

ifeq ($(ENABLE_NETCDF),T)
	NETCDF_INCLUDE ?= -I/mppxb/c26053/share/include
	NETCDF_LIBS    ?= -L/mppxb/c26053/share/lib -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -lz -lm
	FFLAGS         += $(NETCDF_INCLUDE)
	CFLAGS         += $(NETCDF_INCLUDE)
endif

LAPACK_LIBS ?= -mkl

###########################

MODDIROPT ?= -module $(BUILDDIR)
OBJDIR    ?= $(BUILDDIR)

LD     = $(FC)
LFLAGS = $(FFLAGS)

MAKE    = make
INSTALL = install
AR      = ar
ARFLAGS = r
RANLIB  = ranlib
JOBSUB  = sbatch
